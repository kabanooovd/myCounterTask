{"version":3,"sources":["Components/CounterParts/CounterRemote/RemoteCounter.module.css","Components/CounterParts/CounterDisplay/CounterDisplay.module.css","Components/Counter.module.css","Components/CounterParts/CounterDisplay/CounterDisplay.tsx","Components/CounterParts/CounterRemote/RemoteCounter.tsx","Components/Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","CounterDisplay","props","displayValStyles","incVal","maxVal","s","theValMax","theVal","className","counterValue","RemoteCounter","IncToDisabled","ResetToDisabled","initialVal","incBtnStyle","counterBtnStyleDisabled","counterBtnStyle","resetBtnStyle","remote","btnPlace","onClick","setIncVal","disabled","Counter","MainCounterShell","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,OAAS,8BAA8B,gBAAkB,uCAAuC,wBAA0B,+CAA+C,SAAW,kC,gBCAtMD,EAAOC,QAAU,CAAC,aAAe,qCAAqC,OAAS,+BAA+B,UAAY,oC,kBCA1HD,EAAOC,QAAU,CAAC,iBAAmB,oC,gLCOxBC,EAAiB,SAACC,GAE3B,IAAMC,EAAoBD,EAAME,SAAWF,EAAMG,OAASC,IAAEC,UAAYD,IAAEE,OAE1E,OACI,qBAAKC,UAAWH,IAAEI,aAAlB,SACI,qBAAKD,UAAWN,EAAhB,SACKD,EAAME,Y,gBCLVO,EAAgB,SAACT,GAI1B,IAUMU,EAAiBV,EAAME,SAAWF,EAAMG,OACxCQ,EAAmBX,EAAME,SAAWF,EAAMY,WAE1CC,EAAcH,EAAeN,IAAEU,wBAA0BV,IAAEW,gBAC3DC,EAAgBL,EAAiBP,IAAEU,wBAA0BV,IAAEW,gBAErE,OACI,sBAAKR,UAAWH,IAAEa,OAAlB,UACI,qBAAKV,UAAWH,IAAEc,SAAlB,SACI,wBAAQX,UAAWM,EACXM,QApBI,WAChBnB,EAAME,OAASF,EAAMG,QACrBH,EAAMoB,UAAUpB,EAAME,OAAS,IAmBnBmB,SAAUX,EAFlB,mBAOJ,qBAAKH,UAAWH,IAAEc,SAAlB,SACI,wBAAQX,UAAWS,EACXG,QAtBC,WACjBnB,EAAMoB,UAAUpB,EAAMY,aAsBNS,SAAUV,EAFlB,yBC7BHW,EAAU,SAACtB,GAEpB,OACI,sBAAKO,UAAWH,IAAEmB,iBAAlB,UACI,cAAC,EAAD,CAAgBrB,OAAQF,EAAME,OACdC,OAAQH,EAAMG,SAG9B,cAAC,EAAD,CAAeD,OAAQF,EAAME,OACdkB,UAAWpB,EAAMoB,UACjBjB,OAAQH,EAAMG,OACdS,WAAYZ,EAAMY,iBCD9BY,MAlBf,WAEI,IAFW,EAKiBC,mBAHT,GAFR,mBAKJvB,EALI,KAKIkB,EALJ,KAOX,OACI,qBAAKb,UAAW,MAAhB,SACI,cAAC,EAAD,CAASL,OAAQA,EACRU,WARE,EASFQ,UAAWA,EACXjB,OATF,OCOJuB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.304d3838.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"remote\":\"RemoteCounter_remote__1t-39\",\"counterBtnStyle\":\"RemoteCounter_counterBtnStyle__-VcwN\",\"counterBtnStyleDisabled\":\"RemoteCounter_counterBtnStyleDisabled__hXgWK\",\"btnPlace\":\"RemoteCounter_btnPlace__1bNtO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counterValue\":\"CounterDisplay_counterValue__i_q_n\",\"theVal\":\"CounterDisplay_theVal__exCfv\",\"theValMax\":\"CounterDisplay_theValMax__3shAY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainCounterShell\":\"Counter_MainCounterShell__1ODKE\"};","import React from \"react\";\r\nimport s from \"./CounterDisplay.module.css\";\r\n\r\ntype CounterDisplayPropsType = {\r\n    incVal: number\r\n    maxVal: number\r\n}\r\n\r\nexport const CounterDisplay = (props: CounterDisplayPropsType) => {\r\n\r\n    const displayValStyles = (props.incVal === props.maxVal)? s.theValMax : s.theVal\r\n\r\n    return(\r\n        <div className={s.counterValue}>\r\n            <div className={displayValStyles}>\r\n                {props.incVal}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport s from \"./RemoteCounter.module.css\";\r\n\r\ntype RemoteCounterPropsType = {\r\n    incVal: number\r\n    initialVal: number\r\n    setIncVal: (value: number) => void\r\n    maxVal: number\r\n}\r\n\r\nexport const RemoteCounter = (props: RemoteCounterPropsType) => {\r\n\r\n    //const [toDisabled, setToDisabled] = useState(false)\r\n\r\n    const IncreaseHandler = () => {\r\n        if (props.incVal < props.maxVal) {\r\n            props.setIncVal(props.incVal + 1)\r\n        }\r\n    }\r\n\r\n    const ResetHandler = () => {\r\n        props.setIncVal(props.initialVal)\r\n    }\r\n\r\n    const IncToDisabled = (props.incVal === props.maxVal)\r\n    const ResetToDisabled = (props.incVal === props.initialVal)\r\n\r\n    const incBtnStyle = IncToDisabled? s.counterBtnStyleDisabled : s.counterBtnStyle\r\n    const resetBtnStyle = ResetToDisabled? s.counterBtnStyleDisabled : s.counterBtnStyle\r\n\r\n    return (\r\n        <div className={s.remote}>\r\n            <div className={s.btnPlace}>\r\n                <button className={incBtnStyle}\r\n                        onClick={IncreaseHandler}\r\n                        disabled={IncToDisabled}\r\n                >\r\n                    Inc\r\n                </button>\r\n            </div>\r\n            <div className={s.btnPlace}>\r\n                <button className={resetBtnStyle}\r\n                        onClick={ResetHandler}\r\n                        disabled={ResetToDisabled}\r\n                >\r\n                    Reset\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport s from './Counter.module.css'\r\nimport {CounterDisplay} from \"./CounterParts/CounterDisplay/CounterDisplay\";\r\nimport {RemoteCounter} from \"./CounterParts/CounterRemote/RemoteCounter\";\r\n\r\ntype CounterPropsType = {\r\n    incVal: number\r\n    initialVal: number\r\n    setIncVal: (value: number) => void\r\n    maxVal: number\r\n}\r\n\r\nexport const Counter = (props: CounterPropsType) => {\r\n\r\n    return(\r\n        <div className={s.MainCounterShell}>\r\n            <CounterDisplay incVal={props.incVal}\r\n                            maxVal={props.maxVal}\r\n            />\r\n\r\n            <RemoteCounter incVal={props.incVal}\r\n                           setIncVal={props.setIncVal}\r\n                           maxVal={props.maxVal}\r\n                           initialVal={props.initialVal}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport {Counter} from \"./Components/Counter\";\n\nfunction App() {\n\n    const initialVal = 0\n    const maxVal = 5\n\n    const [incVal, setIncVal] = useState(initialVal)\n\n    return (\n        <div className={'App'}>\n            <Counter incVal={incVal}\n                     initialVal={initialVal}\n                     setIncVal={setIncVal}\n                     maxVal={maxVal}\n            />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}